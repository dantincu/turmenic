using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using Turmenic.DataAccess.EntityFrameworkCore.Config;
using Turmenic.DataAccess.EntityFrameworkCore.Entities;

namespace Turmenic.DataAccess.EntityFrameworkCore.EntityConfigurators
{
    public class DefaultPkEnumEntityNameI18nCfg<TEntity, TEntityId, TEntityName, TEntityNameId, TCfgOpts>
        : DefaultPkEntityCfgBase<TEntityName, TEntityNameId, TCfgOpts>
        where TEntity : EnumEntityI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TEntityName : EnumEntityNameI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TCfgOpts : EnumEntityNameI18nCfgOpts<TEntity, TEntityId, TEntityName, TEntityNameId>
    {
        public DefaultPkEnumEntityNameI18nCfg(
            EntityTypeBuilder<TEntityName> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<TEntityName> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddEnumEntityNameI18nConfig(
                entityTypeBuilder,
                this.EntityCfgOptions);
        }
    }

    public class CustomGeneratedPkEnumEntityNameI18nCfg<TEntity, TEntityId, TEntityName, TEntityNameId, TCfgOpts>
        : CustomGeneratedPkEntityCfgBase<TEntityName, TEntityNameId, TCfgOpts>
        where TEntity : EnumEntityI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TEntityName : EnumEntityNameI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TCfgOpts : EnumEntityNameI18nCfgOpts<TEntity, TEntityId, TEntityName, TEntityNameId>
    {
        public CustomGeneratedPkEnumEntityNameI18nCfg(
            EntityTypeBuilder<TEntityName> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<TEntityName> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddEnumEntityNameI18nConfig(
                entityTypeBuilder,
                this.EntityCfgOptions);
        }
    }

    public class DbAutoGeneratedPkEnumEntityNameI18nCfg<TEntity, TEntityId, TEntityName, TEntityNameId, TCfgOpts>
        : DbAutoGeneratedPkEntityCfgBase<TEntityName, TEntityNameId, TCfgOpts>
        where TEntity : EnumEntityI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TEntityName : EnumEntityNameI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TEntityNameId : struct
        where TCfgOpts : EnumEntityNameI18nCfgOpts<TEntity, TEntityId, TEntityName, TEntityNameId>
    {
        public DbAutoGeneratedPkEnumEntityNameI18nCfg(
            EntityTypeBuilder<TEntityName> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<TEntityName> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddEnumEntityNameI18nConfig(
                entityTypeBuilder,
                this.EntityCfgOptions);
        }
    }

    public class ClientAutoGeneratedPkEnumEntityNameI18nCfg<TEntity, TEntityId, TEntityName, TEntityNameId, TCfgOpts, TValueGenerator>
        : ClientAutoGeneratedPkEntityCfgBase<TEntityName, TEntityNameId, TCfgOpts, TValueGenerator>
        where TEntity : EnumEntityI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TEntityName : EnumEntityNameI18nBase<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TCfgOpts : EnumEntityNameI18nCfgOpts<TEntity, TEntityId, TEntityName, TEntityNameId>
        where TValueGenerator : ValueGenerator
    {
        public ClientAutoGeneratedPkEnumEntityNameI18nCfg(
            EntityTypeBuilder<TEntityName> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<TEntityName> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddEnumEntityNameI18nConfig(
                entityTypeBuilder,
                this.EntityCfgOptions);
        }
    }

    public class ClientAutoGeneratedStringPkEnumEntityNameI18nCfg<TEntity, TEntityId, TEntityName, TCfgOpts>
        : ClientAutoGeneratedStringPkEntityCfgBase<TEntityName, TCfgOpts>
        where TEntity : EnumEntityI18nBase<TEntity, TEntityId, TEntityName, string>
        where TEntityName : EnumEntityNameI18nBase<TEntity, TEntityId, TEntityName, string>
        where TCfgOpts : EnumEntityNameI18nCfgOpts<TEntity, TEntityId, TEntityName, string>
    {
        public ClientAutoGeneratedStringPkEnumEntityNameI18nCfg(
            EntityTypeBuilder<TEntityName> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<TEntityName> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddEnumEntityNameI18nConfig(
                entityTypeBuilder,
                this.EntityCfgOptions);
        }
    }
}
