using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Turmenic.DataAccess.EntityFrameworkCore.Config;
using Turmenic.DataAccess.EntityFrameworkCore.EntityConfigurators;
using Turmenic.DataAccess.Sqlite.Test.Xunit.DataModels;

namespace Turmenic.DataAccess.Sqlite.Test.Xunit.Config
{
    public class AdministrativeSubdivisionCfg
        : DbAutoGeneratedPkNamedEntityI18nCfg<AdministrativeSubdivision, long, AdministrativeSubdivisionName, long, AdministrativeSubdivisionCfgOpts>
    {
        public AdministrativeSubdivisionCfg(
            EntityTypeBuilder<AdministrativeSubdivision> entityTypeBuilder,
            AdministrativeSubdivisionCfgOpts entityCfgOptions) : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected override void Configure(EntityTypeBuilder<AdministrativeSubdivision> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            entityTypeBuilder.HasOne(e => e.AdministrativeSubdivisionType).WithMany().HasForeignKey(e => e.AdministrativeSubdivisionTypeId).IsRequired();
            entityTypeBuilder.HasOne(e => e.AdministrativeArea).WithMany().HasForeignKey(e => e.AdministrativeAreaId).IsRequired();
            entityTypeBuilder.HasOne(e => e.City).WithMany().HasForeignKey(e => e.CityId).IsRequired();
            entityTypeBuilder.HasOne(e => e.Town).WithMany().HasForeignKey(e => e.TownId).IsRequired();
        }
    }

    public class AdministrativeSubdivisionCfgOpts : NamedEntityI18nCfgOpts<AdministrativeSubdivision, long, AdministrativeSubdivisionName, long>
    {
    }

    public class AdministrativeSubdivisionNameCfg
        : DefaultPkEntityNameI18nCfg<AdministrativeSubdivision, long, AdministrativeSubdivisionName, long, AdministrativeSubdivisionNameCfgOpts>
    {
        public AdministrativeSubdivisionNameCfg(
            EntityTypeBuilder<AdministrativeSubdivisionName> entityTypeBuilder,
            AdministrativeSubdivisionNameCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }
    }

    public class AdministrativeSubdivisionNameCfgOpts : EntityNameI18nCfgOpts<AdministrativeSubdivision, long, AdministrativeSubdivisionName, long>
    {
    }
}
