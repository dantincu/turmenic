using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Turmenic.DataAccess.EntityFrameworkCore.Config;
using Turmenic.DataAccess.EntityFrameworkCore.EntityConfigurators;
using Turmenic.DataAccess.Sqlite.Test.Xunit.DataModels;

namespace Turmenic.DataAccess.Sqlite.Test.Xunit.Config
{
    public class CatalogueCfg : DbAutoGeneratedPkNamedEnumEntityI18nCfg<Catalogue, short, CatalogueName, int, CatalogueCfgOpts>
    {
        public CatalogueCfg(
            EntityTypeBuilder<Catalogue> entityTypeBuilder,
            CatalogueCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }
    }

    public class CatalogueCfgOpts : NamedEnumEntityI18nCfgOpts<Catalogue, short, CatalogueName, int>
    {
    }

    public class CatalogueNameCfg : DbAutoGeneratedPkEnumEntityNameI18nCfg<Catalogue, short, CatalogueName, int, CatalogueNameCfgOpts>
    {
        public CatalogueNameCfg(
            EntityTypeBuilder<CatalogueName> entityTypeBuilder,
            CatalogueNameCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }
    }

    public class CatalogueNameCfgOpts : EnumEntityNameI18nCfgOpts<Catalogue, short, CatalogueName, int>
    {
    }

    public class CatalogueItemCfg : DbAutoGeneratedPkNamedEnumEntityI18nCfg<CatalogueItem, int, CatalogueItemName, long, CatalogueItemCfgOpts>
    {
        public CatalogueItemCfg(
            EntityTypeBuilder<CatalogueItem> entityTypeBuilder,
            CatalogueItemCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
            entityTypeBuilder.HasOne(e => e.Catalogue).WithMany().HasForeignKey(e => e.CatalogueId).IsRequired();
        }
    }

    public class CatalogueItemCfgOpts : NamedEnumEntityI18nCfgOpts<CatalogueItem, int, CatalogueItemName, long>
    {
    }

    public class CatalogueItemNameCfg : DbAutoGeneratedPkEnumEntityNameI18nCfg<CatalogueItem, int, CatalogueItemName, long, CatalogueItemNameCfgOpts>
    {
        public CatalogueItemNameCfg(
            EntityTypeBuilder<CatalogueItemName> entityTypeBuilder,
            CatalogueItemNameCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }
    }

    public class CatalogueItemNameCfgOpts : EnumEntityNameI18nCfgOpts<CatalogueItem, int, CatalogueItemName, long>
    {
    }
}
