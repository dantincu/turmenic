using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using Turmenic.DataAccess.EntityFrameworkCore.Config;
using Turmenic.DataAccess.EntityFrameworkCore.Entities;

namespace Turmenic.DataAccess.EntityFrameworkCore.EntityConfigurators
{
    public class DefaultPkNamedEnumEntityCfg<TEntity, TEntityId, TCfgOpts> : DefaultPkEnumEntityCfg<TEntity, TEntityId, TCfgOpts>
        where TEntity : NamedEnumEntityBase<TEntityId>
        where TCfgOpts : NamedEnumEntityCfgOpts<TEntity, TEntityId>
    {
        public DefaultPkNamedEnumEntityCfg(
            EntityTypeBuilder<TEntity> entityTypeBuilder,
            TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected virtual bool IsNameRequired => true;

        protected override void Configure(EntityTypeBuilder<TEntity> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddNamedEnumEntityConfig(
                entityTypeBuilder,
                this.EntityCfgOptions,
                this.IsNameRequired);
        }
    }

    public class CustomGeneratedPkNamedEnumEntityCfg<TEntity, TEntityId, TCfgOpts> : CustomGeneratedPkEnumEntityCfg<TEntity, TEntityId, TCfgOpts>
        where TEntity : NamedEnumEntityBase<TEntityId>
        where TCfgOpts : NamedEnumEntityCfgOpts<TEntity, TEntityId>
    {
        public CustomGeneratedPkNamedEnumEntityCfg(EntityTypeBuilder<TEntity> entityTypeBuilder, TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected virtual bool IsNameRequired => true;

        protected override void Configure(EntityTypeBuilder<TEntity> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddNamedEnumEntityConfig(
                entityTypeBuilder,
                this.EntityCfgOptions,
                this.IsNameRequired);
        }
    }

    public class DbAutoGeneratedPkNamedEnumEntityCfg<TEntity, TEntityId, TCfgOpts> : DbAutoGeneratedPkEnumEntityCfg<TEntity, TEntityId, TCfgOpts>
        where TEntity : NamedEnumEntityBase<TEntityId>
        where TEntityId : struct
        where TCfgOpts : NamedEnumEntityCfgOpts<TEntity, TEntityId>
    {
        public DbAutoGeneratedPkNamedEnumEntityCfg(EntityTypeBuilder<TEntity> entityTypeBuilder, TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected virtual bool IsNameRequired => true;

        protected override void Configure(EntityTypeBuilder<TEntity> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddNamedEnumEntityConfig(
                entityTypeBuilder,
                this.EntityCfgOptions,
                this.IsNameRequired);
        }
    }

    public class ClientAutoGeneratedPkNamedEnumEntityCfg<TEntity, TEntityId, TCfgOpts, TValueGenerator>
        : ClientAutoGeneratedPkEnumEntityCfg<TEntity, TEntityId, TCfgOpts, TValueGenerator>
        where TEntity : NamedEnumEntityBase<TEntityId>
        where TCfgOpts : NamedEnumEntityCfgOpts<TEntity, TEntityId>
        where TValueGenerator : ValueGenerator
    {
        public ClientAutoGeneratedPkNamedEnumEntityCfg(EntityTypeBuilder<TEntity> entityTypeBuilder, TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected virtual bool IsNameRequired => true;

        protected override void Configure(EntityTypeBuilder<TEntity> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddNamedEnumEntityConfig(
                entityTypeBuilder,
                this.EntityCfgOptions,
                this.IsNameRequired);
        }
    }

    public class ClientAutoGeneratedStringPkNamedEnumEntityCfg<TEntity, TCfgOpts> : ClientAutoGeneratedStringPkEnumEntityCfg<TEntity, TCfgOpts>
        where TEntity : NamedEnumEntityBase<string>
        where TCfgOpts : NamedEnumEntityCfgOpts<TEntity, string>
    {
        public ClientAutoGeneratedStringPkNamedEnumEntityCfg(EntityTypeBuilder<TEntity> entityTypeBuilder, TCfgOpts entityCfgOptions)
            : base(entityTypeBuilder, entityCfgOptions)
        {
        }

        protected virtual bool IsNameRequired => true;

        protected override void Configure(EntityTypeBuilder<TEntity> entityTypeBuilder)
        {
            base.Configure(entityTypeBuilder);

            HelperMethods.AddNamedEnumEntityConfig(
                entityTypeBuilder,
                this.EntityCfgOptions,
                this.IsNameRequired);
        }
    }
}
